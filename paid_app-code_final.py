# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EQ3Zra7yh6yQbExxc8rcuj0mkErb0ONu
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
import numpy as np

# Example DataFrame
# Replace this with your own dataset
data = {
    'App': ['App1', 'App2', 'App3', 'App4', 'App5'],
    'Revenue': [1000, 2000, 1500, 3000, 2500],
    'Installs': [10000, 20000, 15000, 30000, 25000],
    'Category': ['Games', 'Tools', 'Games', 'Productivity', 'Games']
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Filter for paid apps only (if applicable, modify your dataset accordingly)
# Assuming revenue > 0 means paid apps in this case
df_paid = df[df['Revenue'] > 0]

# Scatter plot with color-coding based on category
plt.figure(figsize=(10, 6))
sns.scatterplot(x='Installs', y='Revenue', hue='Category', data=df_paid, palette='Set1', s=100)

# Add a trendline using linear regression
X = df_paid['Installs'].values.reshape(-1, 1)
y = df_paid['Revenue'].values
model = LinearRegression()
model.fit(X, y)

# Predicted revenue values for the trendline
y_pred = model.predict(X)

# Plot the trendline
plt.plot(df_paid['Installs'], y_pred, color='black', linestyle='--', label='Trendline')

# Add labels and title
plt.title('Revenue vs. Installs for Paid Apps')
plt.xlabel('Number of Installs')
plt.ylabel('Revenue')
plt.legend()

# Show the plot
plt.show()